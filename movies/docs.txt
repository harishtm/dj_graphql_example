What is GraphQL and Why GraphQL?
    GraphQL is a data query language developed by Facebook
    It is not tied to any specific database
    It provides a way for the client to query from different databases at the same time by requesting what they need
    It returns the response in the format requested by client


=======================================================================================================================
http://localhost:8080/graphql

Example Query in GraphQL

1. To get the actor Information(Filter)

query getActorInfo {
  actor(name: "Sylvester Stallone") {
    id
    name
  }
}

2. To get the Movie Info(Filter)

query getMovieInfo {
  movie(id: 1) {
    id
    title
    actors{
      edges {
        node {
          id
          name
        }
      }
    }
  }
}


3. To create an actor(Create Object)

mutation createNewActor {
  createActor(inputdata: {name: "Vinod gouda patil"}) {
    ok
    actor {
      name
    }
  }
}

4. To update an actor(Update object)

mutation updateActor{
  updateActor(id: 4, inputdata: {name: "Viju"}){
    ok
    actor{
      id
      name
    }
  }
}

5. To create a movie object (Create object which containd many to many relationship)

mutation createMovie {
  createMovie(inputdata : {
    title: "Cast Way",
    actors: [{
      id: 3
    }]
    year: 2019
  }) {
    ok
    movie {
      id
      title
      actors {
        edges {
          node {
            id
            name
          }
        }
      }
      year
    }
  }
}


6. To update movie object

mutation updateMovie { 
  updateMovie(id: 2, inputdata: {
    title: "New Movie",
    actors: [
      {
        id: 3
      }
    ]
    year: 2001
  }) {
    ok
    movie{
      id
      title
      actors {
        edges {
          node {
            id
            name
          }
        }
      }
      year
    }
  }
}


7. To list all movies

query {
  movies {
    title
    year
    actors {
      edges {
        node {
          id
          name
        }
      }
    }
  }
}

8 To list all actors

query{
  actors {
    id
    name
  }
}

=======================================================================================================================
Note:

# schema can be added here or in settings.py file with GRAPHENE = {}
# path('graphql', GraphQLView.as_view(graphiql=True, schema=schema))

# To enable/disable GraphQL UI a set boolean value GraphQLView.as_view(graphiql=True/False)
  To disable GraphiQL, simply edit urls.py such that path('graphql/', GraphQLView.as_view(graphiql=True)), becomes path('graphql/', GraphQLView.as_view(graphiql=False))

=======================================================================================================================
Creating Mutations

A mutation describes what operations can be done to change data on the server.

Mutations rely on two things:

Inputs - special types only used as arguments in a mutation when we want to pass an entire object instead of individual fields.

Payloads - regular types, but by convention we use them as outputs for a mutation so we can easily extend them as the API evolves.
=======================================================================================================================
